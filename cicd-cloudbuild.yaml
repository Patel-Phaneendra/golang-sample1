steps:
#Clone from Google Cloud Source Repository  
- name: 'gcr.io/cloud-builders/git'
  args: ['clone','https://source.developers.google.com/p/${_PROJECT}/r/github_patel-phaneendra_golang-sample1']

#Build the image 
- name: 'gcr.io/cloud-builders/docker'
  args: ['build','-t','asia-south1-docker.pkg.dev/${_PROJECT}/${_REPO_NAME}/${_CONTAINERNAME}:${_VERSION}','.']
  dir: 'hello1' 

#Push the image  
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','asia-south1-docker.pkg.dev/${_PROJECT}/${_REPO_NAME}/${_CONTAINERNAME}:${_VERSION}'] 

# Deploy to GKE 
- name: "gcr.io/cloud-builders/gke-deploy"
  args:
  - run
  - --filename=hello-service.yaml
  - --image=asia-south1-docker.pkg.dev/${_PROJECT}/${_REPO_NAME}/${_CONTAINERNAME}:${_VERSION}
  - --location=${_ZONE}
  - --cluster=${_GKE_CLUSTER}

#Update the existing container image using kubectl set
#- name: 'gcr.io/cloud-builders/kubectl'
#  args:
#  - 'set'
#  - 'image'
#  - 'deployment/${_DEPLOYMENTNAME}'
#  - '${_CONTAINERNAME}=asia-south1-docker.pkg.dev/${_PROJECT}/${_REPO_NAME}/${_CONTAINERNAME}:${_VERSION}'
#  env:
#  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
#  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
  
substitutions:
    #GCP Specific configuration. Please DON'T change anything
    _PROJECT: hbl-poc-digfac-anthos-prj
    _ZONE: asia-south1
    _GKE_CLUSTER: mbrw-dev-cluster-4
    
    #Repository Specific configuration. 
    _DEPLOYMENTNAME: hello-service 
    _CONTAINERNAME: hello-service
    _REPO_NAME: mb-devops
    
    # Developers ONLY change
    _VERSION: v1.0
    
options:
    substitution_option: 'ALLOW_LOOSE'
    logging: CLOUD_LOGGING_ONLY
